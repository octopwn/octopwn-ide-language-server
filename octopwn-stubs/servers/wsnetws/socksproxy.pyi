from _typeshed import Incomplete
from asysocks.unicomm.common.proxy import UniProxyProto as UniProxyProto
from wsnet.protocol import CMD as CMD, OPCMD as OPCMD

class WSNETSocksProxy:
    in_q: Incomplete
    ws: Incomplete
    token: Incomplete
    out_queue: Incomplete
    connectionfactory: Incomplete
    timeout: int
    in_task: Incomplete
    out_task: Incomplete
    buffer: bytes
    bufferlock: Incomplete
    closed_event: Incomplete
    data_in_evt: Incomplete
    def __init__(self, in_q, ws, token, connectionfactory) -> None: ...
    async def terminate(self) -> None: ...
    def close(self) -> None: ...
    async def sr(self, cmd: CMD): ...
    async def connect(self, ip, port, protocol: UniProxyProto): ...
    def write(self, data) -> None: ...
    async def drain(self) -> None: ...
    async def read(self, n: int = -1): ...
    async def readexactly(self, n): ...
    async def readuntil(self, separator: bytes = b'\n'): ...
    async def readline(self): ...
    def at_eof(self): ...
    def __deepcopy__(self, memo: Incomplete | None = None): ...
