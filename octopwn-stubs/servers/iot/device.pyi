from _typeshed import Incomplete
from octopwn.clients.scannerbase import ScannerConsoleBase as ScannerConsoleBase
from websockets.client import WebSocketClientProtocol as WebSocketClientProtocol

class Peripheral:
    def __init__(self) -> None: ...
    async def getbool(self) -> None: ...
    async def setbool(self, newstate, remote: bool = False) -> None: ...
    async def getint(self) -> None: ...
    async def setint(self, newint, remote: bool = False) -> None: ...
    async def getstring(self) -> None: ...
    async def setstring(self, newint, remote: bool = False) -> None: ...
    async def getbytes(self) -> None: ...
    async def setbytes(self, newint, remote: bool = False) -> None: ...
    async def gettag(self, tag) -> None: ...
    async def settag(self, tag, newbytes, remote: bool = False) -> None: ...
    async def getvideo(self, x, y, width, height, vtype, data) -> None: ...
    async def getaudio(self, data) -> None: ...

class SwitchController(ScannerConsoleBase, Peripheral):
    state: Incomplete
    out_q: Incomplete
    def __init__(self, client_id, connection, cmd_q, msg_queue, prompt, octopwnobj) -> None: ...
    async def start(self): ...
    async def do_state(self) -> None: ...
    async def setbool(self, newstate, remote: bool = False) -> None: ...

class Device(ScannerConsoleBase):
    params: Incomplete
    device_id: Incomplete
    ws: Incomplete
    deviceinfo: Incomplete
    closed_evt: Incomplete
    token_table: Incomplete
    peripherals: Incomplete
    def __init__(self, client_id, connection, cmd_q, msg_queue, prompt, octopwnobj) -> None: ...
    def get_device_info(self): ...
    async def start(self): ...
