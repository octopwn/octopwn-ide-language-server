from _typeshed import Incomplete
from asn1crypto.core import BitString, Boolean as Boolean, Choice, Enumerated, ObjectIdentifier, Sequence, SequenceOf

TAG: str
UNIVERSAL: int
APPLICATION: int
CONTEXT: int

class MechType(ObjectIdentifier): ...
class MechTypes(SequenceOf): ...
class ContextFlags(BitString): ...
class NegState(Enumerated): ...
class NegHints(Sequence): ...
class NegTokenInit2(Sequence): ...
class NegTokenResp(Sequence): ...
class NegotiationToken(Choice): ...

class GSS_SPNEGO(Sequence):
    class_: int
    tag: int

class GSSType(ObjectIdentifier): ...

class GSSAPI(Sequence):
    class_: int
    tag: int

class KRB5Token:
    tok_id: Incomplete
    data: Incomplete
    def __init__(self, data: Incomplete | None = None, tok_id: bytes = b'\x01\x00') -> None: ...
    @staticmethod
    def from_bytes(data): ...
    @staticmethod
    def from_buffer(buff): ...
    def length_encode(self, x): ...
    def to_bytes(self): ...
