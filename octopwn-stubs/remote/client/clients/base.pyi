from _typeshed import Incomplete
from collections.abc import Generator
from google.protobuf.json_format import MessageToDict as MessageToDict
from octopwn._version import __banner__ as __banner__
from octopwn.common.clientconfig import ClientConfig as ClientConfig, ClientConfigBase as ClientConfigBase, ScannerConfig as ScannerConfig, ServerConfig as ServerConfig, UtilsConfig as UtilsConfig
from octopwn.remote import client as client
from octopwn.remote.client import logger as logger
from octopwn.remote.protocol.python import messages_pb2 as messages_pb2

class ClientConsoleBaseRemote:
    aliases: Incomplete
    ATTR_START: str
    prompt: str
    octopwnobj: Incomplete
    clientid: Incomplete
    commans: Incomplete
    tokenctr: int
    command_modifier: Incomplete
    def __init__(self, octopwnobj, clientid, commands=[], command_modifier: Incomplete | None = None) -> None: ...
    def get_token(self): ...
    async def print_exc(self, err: Exception, with_tb: bool = True, extra_msg: str = ''): ...
    async def print(self, msgdata, client_id: int = 0) -> None: ...
    def command_list(self): ...
    async def handle_remote_out(self, localclientid, msg) -> None: ...
    async def recv_token(self, token, to_cleanup: bool = True, yield_continue: bool = False, yield_ok: bool = False) -> Generator[Incomplete, None, None]: ...
    async def process_message(self, msg) -> None: ...
    async def process_message_internal(self, msg) -> None: ...
    async def send_target(self, target) -> None: ...
    async def send_credential(self, credential) -> None: ...
    async def send_genericcommand(self, clientid, command, params): ...
    async def send_clientmessage(self, clientid, cmd, token: Incomplete | None = None) -> None: ...
    async def send_message(self, msg) -> None: ...
    async def send_ok(self, clientid, token, message: Incomplete | None = None): ...
    async def send_continue(self, clientid, token, message: Incomplete | None = None): ...
    async def send_err(self, clientid, token, message: Incomplete | None = None): ...
