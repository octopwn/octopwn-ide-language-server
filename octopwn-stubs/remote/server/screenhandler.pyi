from _typeshed import Incomplete
from octopwn.clients import OCTOPWN_CLIENT_TABLE as OCTOPWN_CLIENT_TABLE
from octopwn.common.paramsutil import serializeParamsDict as serializeParamsDict
from octopwn.remote.protocol.python import messages_pb2 as messages_pb2
from octopwn.scanners import OCTOPWN_SCANNER_TABLE as OCTOPWN_SCANNER_TABLE
from octopwn.utils import OCTOPWN_UTIL_TABLE as OCTOPWN_UTIL_TABLE

class Dummy:
    completer: Incomplete
    def __init__(self) -> None: ...

class RemoteScreenHandler:
    is_shared: Incomplete
    input_area: Incomplete
    multi_window_support: bool
    remoting_support: bool
    dispatch_history: Incomplete
    remote_clients: Incomplete
    octopwn: Incomplete
    input_handler: Incomplete
    def __init__(self, is_shared: bool = True) -> None: ...
    async def dispatch_message(self, msg, remote_clientid: Incomplete | None = None) -> None: ...
    async def send_client_message(self, message, remote_clientid: Incomplete | None = None, remote_token: Incomplete | None = None) -> None: ...
    async def print_client_msg(self, timestamp: str, clientid: int, msg: str, username: Incomplete | None = None): ...
    async def print_main_window(self, timestamp, msg, username: Incomplete | None = None) -> None: ...
    async def clear_main_window(self) -> None: ...
    async def client_added(self, cid, client): ...
    async def refresh_clients(self, force: bool = False): ...
    async def target_added(self, tid, target):
        """Called when a new target has been added"""
    async def refresh_targets(self, force: bool = False): ...
    async def refresh_proxies(self, force: bool = False): ...
    async def proxy_added(self, pid, proxy):
        """Add a proxy entry to the proxies window"""
    async def refresh_credentials(self, force: bool = False): ...
    async def credential_added(self, cid, credential): ...
    async def set_input_dialog_title(self, clientid, title) -> None: ...
    async def set_message_dialog_title(self, clientid: int, title: str): ...
    def abort(self, event: Incomplete | None = None) -> None: ...
    async def create_client_window(self, clientid: int, cliname: str, client_settings, client): ...
    async def runtask(self) -> None: ...
    async def run(self, octopwn, input_handler: Incomplete | None = None): ...
    async def send_window_message(self, clientid: int, protomsg, tokenid: int = None): ...
    async def window_message_incoming(self, clientid: int, msgtype: str, msg: Incomplete | None = None): ...
